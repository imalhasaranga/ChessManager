/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * gameDetails.java
 *
 * Created on May 19, 2010, 8:19:15 PM
 */
package chessimal12;

import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.Statement;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.Vector;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JTextField;

import javax.swing.table.DefaultTableModel;

/**
 *
 * @author PC
 */
public class gameDetails extends javax.swing.JFrame {

    String val = "1";

    void pointvalidating(java.awt.event.KeyEvent ev, JTextField sd) {
        String k = String.valueOf(ev.getKeyChar());
        String s = sd.getText();

        if ((k.equals("1") | k.equals("0")) && sd.getText().length() <= 0 || ((s.equals("0") & k.equals(".")) && sd.getText().length() >= 1) || ((s.equals("0.") & k.equals("5")) && sd.getText().length() >= 2) || ((s.equals("") & k.equals(".")) && sd.getText().length() >= 0) || ((s.equals(".") & k.equals("5")) && sd.getText().length() >= 1)) {
        } else {
            ev.consume();
        }
    }

    void openings() {
        DefaultTableModel df1 = (DefaultTableModel) jtopening.getModel();
        df1.setRowCount(0);
        try {
            Connection con = DB.getMyConnection();
            Statement st = con.createStatement();
            ResultSet rs = st.executeQuery("select* from openings");
            while (rs.next()) {
                Vector v = new Vector();
                v.add(rs.getString("no"));
                v.add(rs.getString("opening"));

                df1.addRow(v);

            }
        } catch (Exception e) {
            System.out.println(e + "dfd");
        }
    }

    void error(JTextField opening) {
        int q = Integer.parseInt((String) jtopening.getValueAt(jtopening.getRowCount() - 1, 0));
        int z = Integer.parseInt(opening.getText());

        if (!(q >= z)) {
            JOptionPane.showMessageDialog(null, "The nuber enterd is out of the index");
        }
    }

    /** Creates new form gameDetails */
    void pddetails(JTextField t11, JLabel l11) {

        int rating = Integer.parseInt(l4.getText());
        int opprating = Integer.parseInt(t11.getText());
        int diff = rating > opprating ? rating - opprating : opprating - rating;
        l11.setText(diff >= 735 ? "1.00" : "aa");

        try {
            Connection con = DB.getMyConnection();
            Statement st = con.createStatement();

            ResultSet rs = st.executeQuery("select pd from ratingtable where (one<='" + diff + "' && two >='" + diff + "')    ");

            while (rs.next()) {

                l11.setText(rs.getString("pd"));

            }

        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Please Do not skip TextFields");
        }

    }

    public gameDetails() {

       
        initComponents();
        this.openings();
        b1.setEnabled(false);


        DefaultTableModel df = (DefaultTableModel) t1.getModel();
        df.setRowCount(0);
        try {
            Connection con = DB.getMyConnection();
            Statement st = con.createStatement();
            ResultSet rs = st.executeQuery("select StuID,Nameinit,rating from students  where groupStu='" + Home1.selectedGroup + "' ");
            while (rs.next()) {
                Vector v2 = new Vector();

                v2.add(rs.getString("StuID"));
                v2.add(rs.getString("Nameinit"));
                v2.add(rs.getString("rating"));
                df.addRow(v2);
            }


        } catch (Exception e) {
            System.out.println(e);
        }

        try {
            jtopening.setRowSelectionInterval(0, 0);

        } catch (IllegalArgumentException e) {
            System.out.println("hello a row cannot be select right now");
        }







    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton3 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        score3 = new javax.swing.JTextField();
        pd3 = new javax.swing.JLabel();
        l11 = new javax.swing.JLabel();
        jSeparator4 = new javax.swing.JSeparator();
        opratin4 = new javax.swing.JTextField();
        jTextField1 = new javax.swing.JTextField();
        jPanel1 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        name = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        Id = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        b1 = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jScrollPane1 = new javax.swing.JScrollPane();
        t1 = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();
        l0 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        l2 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        l3 = new javax.swing.JLabel();
        l4 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        l5 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        l6 = new javax.swing.JLabel();
        l7 = new javax.swing.JLabel();
        l8 = new javax.swing.JLabel();
        opratin1 = new javax.swing.JTextField();
        score = new javax.swing.JTextField();
        pd = new javax.swing.JLabel();
        opratin2 = new javax.swing.JTextField();
        score1 = new javax.swing.JTextField();
        pd1 = new javax.swing.JLabel();
        l9 = new javax.swing.JLabel();
        jSeparator2 = new javax.swing.JSeparator();
        score2 = new javax.swing.JTextField();
        pd2 = new javax.swing.JLabel();
        l10 = new javax.swing.JLabel();
        jSeparator3 = new javax.swing.JSeparator();
        opratin3 = new javax.swing.JTextField();
        score4 = new javax.swing.JTextField();
        pd4 = new javax.swing.JLabel();
        l12 = new javax.swing.JLabel();
        jSeparator5 = new javax.swing.JSeparator();
        opratin5 = new javax.swing.JTextField();
        score5 = new javax.swing.JTextField();
        pd5 = new javax.swing.JLabel();
        l13 = new javax.swing.JLabel();
        jSeparator6 = new javax.swing.JSeparator();
        opratin6 = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jSeparator7 = new javax.swing.JSeparator();
        pd6 = new javax.swing.JLabel();
        l14 = new javax.swing.JLabel();
        color1 = new javax.swing.JTextField();
        l15 = new javax.swing.JLabel();
        color2 = new javax.swing.JTextField();
        color3 = new javax.swing.JTextField();
        color4 = new javax.swing.JTextField();
        color5 = new javax.swing.JTextField();
        l16 = new javax.swing.JLabel();
        opening = new javax.swing.JTextField();
        opening1 = new javax.swing.JTextField();
        opening2 = new javax.swing.JTextField();
        opening3 = new javax.swing.JTextField();
        opening4 = new javax.swing.JTextField();
        back = new javax.swing.JButton();
        jTextField2 = new javax.swing.JTextField();
        ts = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        Addnew = new javax.swing.JButton();
        Addnew1 = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        jScrollPane4 = new javax.swing.JScrollPane();
        jtopening = new javax.swing.JTable();

        jButton3.setText("jButton3");

        jLabel1.setText("jLabel1");

        pd3.setText("qqqq");

        l11.setText("Game 1");

        jTextField1.setText("jTextField1");

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setResizable(false);

        name.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                nameKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                nameKeyTyped(evt);
            }
        });

        jLabel3.setText("ID   :");

        Id.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                IdKeyReleased(evt);
            }
        });

        jLabel2.setText("Name    :");

        b1.setText("Add");
        b1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b1ActionPerformed(evt);
            }
        });

        t1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "ID", "Name", "Given rating"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        t1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                t1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(t1);
        t1.getColumnModel().getColumn(0).setResizable(false);
        t1.getColumnModel().getColumn(0).setPreferredWidth(1);
        t1.getColumnModel().getColumn(1).setResizable(false);
        t1.getColumnModel().getColumn(1).setPreferredWidth(340);
        t1.getColumnModel().getColumn(2).setResizable(false);
        t1.getColumnModel().getColumn(2).setPreferredWidth(20);

        jScrollPane2.setViewportView(jScrollPane1);

        jPanel2.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        l0.setText("Name");

        jLabel5.setText("ID");

        jLabel6.setText(":");

        jLabel7.setText(":");

        l3.setText("Rating");

        l4.setText("0000");

        jLabel8.setText(":");

        jLabel4.setText("Add new Game Details for this player");

        l5.setText("Game 1");

        l6.setFont(new java.awt.Font("Tahoma", 1, 10));
        l6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        l6.setText("Opp Rating");

        l7.setFont(new java.awt.Font("Tahoma", 1, 10));
        l7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        l7.setText("Result");
        l7.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        l8.setFont(new java.awt.Font("Tahoma", 1, 10));
        l8.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        l8.setText("PD");

        opratin1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                opratin1FocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                opratin1FocusLost(evt);
            }
        });
        opratin1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                opratin1KeyTyped(evt);
            }
        });

        score.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        score.setText("0");
        score.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                scoreFocusLost(evt);
            }
        });
        score.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                scoreKeyTyped(evt);
            }
        });

        pd.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        pd.setText("0");

        opratin2.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                opratin2FocusLost(evt);
            }
        });
        opratin2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                opratin2KeyTyped(evt);
            }
        });

        score1.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        score1.setText("0");
        score1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                score1FocusLost(evt);
            }
        });
        score1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                score1KeyTyped(evt);
            }
        });

        pd1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        pd1.setText("0");

        l9.setText("Game 2");

        score2.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        score2.setText("0");
        score2.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                score2FocusLost(evt);
            }
        });
        score2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                score2KeyTyped(evt);
            }
        });

        pd2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        pd2.setText("0");

        l10.setText("Game 3");

        opratin3.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                opratin3FocusLost(evt);
            }
        });
        opratin3.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                opratin3KeyTyped(evt);
            }
        });

        score4.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        score4.setText("0");
        score4.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                score4FocusLost(evt);
            }
        });
        score4.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                score4KeyTyped(evt);
            }
        });

        pd4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        pd4.setText("0");

        l12.setText("Game 4");

        opratin5.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                opratin5FocusLost(evt);
            }
        });
        opratin5.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                opratin5KeyTyped(evt);
            }
        });

        score5.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        score5.setText("0");
        score5.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                score5FocusLost(evt);
            }
        });
        score5.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                score5KeyTyped(evt);
            }
        });

        l13.setText("Game 5");

        opratin6.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                opratin6FocusLost(evt);
            }
        });
        opratin6.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                opratin6KeyTyped(evt);
            }
        });

        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 11));
        jLabel9.setText("Final Rating");

        pd6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        pd6.setText("0");

        color1.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        color1.setText("w");
        color1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                color1FocusLost(evt);
            }
        });
        color1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                color1KeyTyped(evt);
            }
        });

        l15.setFont(new java.awt.Font("Tahoma", 1, 10));
        l15.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        l15.setText("(b/w)");

        color2.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        color2.setText("w");
        color2.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                color2FocusLost(evt);
            }
        });
        color2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                color2KeyTyped(evt);
            }
        });

        color3.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        color3.setText("w");
        color3.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                color3FocusLost(evt);
            }
        });
        color3.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                color3KeyTyped(evt);
            }
        });

        color4.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        color4.setText("w");
        color4.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                color4FocusLost(evt);
            }
        });
        color4.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                color4KeyTyped(evt);
            }
        });

        color5.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        color5.setText("w");
        color5.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                color5FocusLost(evt);
            }
        });
        color5.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                color5KeyTyped(evt);
            }
        });

        l16.setFont(new java.awt.Font("Tahoma", 1, 10));
        l16.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        l16.setText("Opening");

        opening.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        opening.setText("1");
        opening.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                openingActionPerformed(evt);
            }
        });
        opening.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                openingFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                openingFocusLost(evt);
            }
        });
        opening.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                openingKeyTyped(evt);
            }
        });

        opening1.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        opening1.setText("1");
        opening1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                opening1FocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                opening1FocusLost(evt);
            }
        });
        opening1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                opening1KeyTyped(evt);
            }
        });

        opening2.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        opening2.setText("1");
        opening2.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                opening2FocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                opening2FocusLost(evt);
            }
        });
        opening2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                opening2KeyTyped(evt);
            }
        });

        opening3.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        opening3.setText("1");
        opening3.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                opening3FocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                opening3FocusLost(evt);
            }
        });
        opening3.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                opening3KeyTyped(evt);
            }
        });

        opening4.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        opening4.setText("1");
        opening4.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                opening4FocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                opening4FocusLost(evt);
            }
        });
        opening4.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                opening4KeyTyped(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel2Layout.createSequentialGroup()
                                .addComponent(l3, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(33, 33, 33)
                                .addComponent(l4, javax.swing.GroupLayout.DEFAULT_SIZE, 256, Short.MAX_VALUE))
                            .addComponent(jSeparator1, javax.swing.GroupLayout.DEFAULT_SIZE, 373, Short.MAX_VALUE)
                            .addComponent(jSeparator2, javax.swing.GroupLayout.DEFAULT_SIZE, 373, Short.MAX_VALUE)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel2Layout.createSequentialGroup()
                                .addComponent(l9, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(44, 44, 44)
                                .addComponent(opratin2, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(35, 35, 35)
                                .addComponent(score1, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(13, 13, 13)
                                .addComponent(pd1, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(color2, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(opening1, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jSeparator3, javax.swing.GroupLayout.DEFAULT_SIZE, 373, Short.MAX_VALUE)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel2Layout.createSequentialGroup()
                                .addComponent(l10, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(44, 44, 44)
                                .addComponent(opratin3, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(35, 35, 35)
                                .addComponent(score2, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(13, 13, 13)
                                .addComponent(pd2, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(color3, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(opening2, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jSeparator5, javax.swing.GroupLayout.DEFAULT_SIZE, 373, Short.MAX_VALUE)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel2Layout.createSequentialGroup()
                                .addComponent(l12, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(44, 44, 44)
                                .addComponent(opratin5, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(35, 35, 35)
                                .addComponent(score4, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(13, 13, 13)
                                .addComponent(pd4, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(color4, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(opening3, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jSeparator6, javax.swing.GroupLayout.DEFAULT_SIZE, 373, Short.MAX_VALUE)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel2Layout.createSequentialGroup()
                                .addComponent(l5, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(43, 43, 43)
                                .addComponent(opratin1, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(35, 35, 35)
                                .addComponent(score, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(13, 13, 13)
                                .addComponent(pd, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(color1, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(opening, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 218, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel2Layout.createSequentialGroup()
                                .addComponent(l13, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(44, 44, 44)
                                .addComponent(opratin6, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(35, 35, 35)
                                .addComponent(score5, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(13, 13, 13)
                                .addComponent(pd6, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(color5, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(opening4, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jSeparator7, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 373, Short.MAX_VALUE)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addComponent(l0, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(33, 33, 33)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(l14, javax.swing.GroupLayout.DEFAULT_SIZE, 256, Short.MAX_VALUE)
                                    .addComponent(l2, javax.swing.GroupLayout.DEFAULT_SIZE, 256, Short.MAX_VALUE)))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(l6, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(l7, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(l8, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(l15, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(l16, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(20, 20, 20))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel9)
                        .addGap(38, 38, 38)
                        .addComponent(pd5, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel5)
                        .addComponent(jLabel6))
                    .addComponent(l14, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(l0)
                    .addComponent(l2, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(l3)
                    .addComponent(l4, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8))
                .addGap(18, 18, 18)
                .addComponent(jLabel4)
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(l15)
                    .addComponent(l16)
                    .addComponent(l6)
                    .addComponent(l8)
                    .addComponent(l7))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 5, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(l5)
                    .addComponent(opratin1, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(score, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(pd, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(color1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(opening, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 5, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(l9)
                    .addComponent(opratin2, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(score1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(pd1, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(color2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(opening1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, 5, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(l10)
                    .addComponent(opratin3, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(score2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(pd2, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(color3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(opening2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator5, javax.swing.GroupLayout.PREFERRED_SIZE, 5, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(l12)
                    .addComponent(opratin5, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(score4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(pd4, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(color4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(opening3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator6, javax.swing.GroupLayout.PREFERRED_SIZE, 5, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(5, 5, 5)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(l13)
                    .addComponent(opratin6, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(score5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(pd6, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(color5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(opening4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jSeparator7, javax.swing.GroupLayout.PREFERRED_SIZE, 5, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(jLabel9))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(pd5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        back.setText("Back");
        back.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backActionPerformed(evt);
            }
        });

        ts.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                tsKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                tsKeyTyped(evt);
            }
        });

        jLabel10.setText("Quick Search");

        Addnew.setFont(new java.awt.Font("Tahoma", 0, 10));
        Addnew.setText("new");
        Addnew.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddnewActionPerformed(evt);
            }
        });

        Addnew1.setFont(new java.awt.Font("Tahoma", 0, 10));
        Addnew1.setText("Delete select");
        Addnew1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Addnew1ActionPerformed(evt);
            }
        });

        jScrollPane4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jScrollPane4MouseClicked(evt);
            }
        });

        jtopening.setAutoCreateRowSorter(true);
        jtopening.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "no", "Openining"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                true, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jtopening.setAutoscrolls(false);
        jtopening.setMaximumSize(new java.awt.Dimension(2147483647, 300));
        jtopening.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jtopeningMouseEntered(evt);
            }
        });
        jScrollPane4.setViewportView(jtopening);
        jtopening.getColumnModel().getColumn(0).setPreferredWidth(2);
        jtopening.getColumnModel().getColumn(1).setResizable(false);
        jtopening.getColumnModel().getColumn(1).setPreferredWidth(400);

        jScrollPane3.setViewportView(jScrollPane4);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel10, javax.swing.GroupLayout.DEFAULT_SIZE, 96, Short.MAX_VALUE)
                        .addGap(343, 343, 343)
                        .addComponent(back, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(b1, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(Addnew, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(Addnew1, javax.swing.GroupLayout.DEFAULT_SIZE, 98, Short.MAX_VALUE))
                            .addComponent(jTextField2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 178, Short.MAX_VALUE)
                            .addComponent(ts, javax.swing.GroupLayout.DEFAULT_SIZE, 178, Short.MAX_VALUE)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 178, Short.MAX_VALUE)
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 178, Short.MAX_VALUE))
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGap(22, 22, 22)
                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(name, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 29, Short.MAX_VALUE)
                                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(Id, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(13, 13, 13)))))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addComponent(jScrollPane2, 0, 0, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel10)
                        .addGap(2, 2, 2)
                        .addComponent(ts, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(Addnew)
                            .addComponent(Addnew1)))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(Id, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(name, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(b1)
                    .addComponent(back))
                .addGap(20, 20, 20))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        java.awt.Dimension screenSize = java.awt.Toolkit.getDefaultToolkit().getScreenSize();
        setBounds((screenSize.width-627)/2, (screenSize.height-519)/2, 627, 519);
    }// </editor-fold>//GEN-END:initComponents

    private void backActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backActionPerformed
        this.dispose();








    }//GEN-LAST:event_backActionPerformed

    private void t1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_t1MouseClicked
        l14.setText(t1.getValueAt(t1.getSelectedRow(), 0).toString());
        l2.setText(t1.getValueAt(t1.getSelectedRow(), 1).toString());
        l4.setText(t1.getValueAt(t1.getSelectedRow(), 2).toString());
        b1.setEnabled(true);
        opratin1.setText("0");
        opratin2.setText("0");
        opratin3.setText("0");
        opratin5.setText("0");
        opratin6.setText("0");
        pd.setText("0");
        pd1.setText("0");
        pd2.setText("0");
        pd4.setText("0");
        pd6.setText("0");
        score5.setText("0");
        score4.setText("0");
        score2.setText("0");
        score1.setText("0");
        score.setText("0");
        pd5.setText("");


    }//GEN-LAST:event_t1MouseClicked

    private void opratin1FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_opratin1FocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_opratin1FocusGained

    private void opratin1FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_opratin1FocusLost
        if (!l4.getText().equals("0000")) {
            this.pddetails(opratin1, pd);
        } else {
            JOptionPane.showMessageDialog(null, "Please Select a Member");
        }


    }//GEN-LAST:event_opratin1FocusLost

    private void opratin2FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_opratin2FocusLost


        if (!l4.getText().equals("0000")) {
            this.pddetails(opratin2, pd1);
        } else {
            JOptionPane.showMessageDialog(null, "Please Select a Member");
        }
    }//GEN-LAST:event_opratin2FocusLost

    private void opratin3FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_opratin3FocusLost



        if (!l4.getText().equals("0000")) {
            this.pddetails(opratin3, pd2);
        } else {
            JOptionPane.showMessageDialog(null, "Please Select a Member");
        }
    }//GEN-LAST:event_opratin3FocusLost

    private void opratin5FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_opratin5FocusLost



        if (!l4.getText().equals("0000")) {
            this.pddetails(opratin5, pd4);
        } else {
            JOptionPane.showMessageDialog(null, "Please Select a Member");
        }
    }//GEN-LAST:event_opratin5FocusLost

    private void opratin6FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_opratin6FocusLost



        if (!l4.getText().equals("0000")) {
            this.pddetails(opratin6, pd6);
        } else {
            JOptionPane.showMessageDialog(null, "Please Select a Member");
        }
    }//GEN-LAST:event_opratin6FocusLost

    private void nameKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_nameKeyReleased
        DefaultTableModel df = (DefaultTableModel) t1.getModel();
        df.setRowCount(0);


        try {
            Connection con = DB.getMyConnection();
            Statement st = con.createStatement();
            ResultSet rs = st.executeQuery("select* from students where Nameinit like'%" + name.getText() + "%' && groupStu='" + Home1.selectedGroup + "'");
            while (rs.next()) {
                Vector v1 = new Vector();
                v1.add(rs.getString("StuID"));
                v1.add(rs.getString("Nameinit"));
                v1.add(rs.getString("rating"));
                df.addRow(v1);
            }
        } catch (Exception e) {
            System.out.println(e);
        }
    }//GEN-LAST:event_nameKeyReleased

    private void IdKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_IdKeyReleased
        DefaultTableModel df = (DefaultTableModel) t1.getModel();
        df.setRowCount(0);


        try {
            Connection con = DB.getMyConnection();
            Statement st = con.createStatement();
            ResultSet rs = st.executeQuery("select* from students where StuID like'" + Id.getText() + "%' && groupStu='" + Home1.selectedGroup + "'");
            while (rs.next()) {
                Vector v1 = new Vector();
                v1.add(rs.getString("StuID"));
                v1.add(rs.getString("Nameinit"));
                v1.add(rs.getString("rating"));
                df.addRow(v1);
            }
        } catch (Exception e) {
            System.out.println(e);
        }
    }//GEN-LAST:event_IdKeyReleased

    private void b1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b1ActionPerformed

        this.error(opening4);
        int countplay = 0;
        int k = 25;
        double pluse;


        try {
            Connection con = DB.getMyConnection();
            Statement st = con.createStatement();
            ResultSet rs = st.executeQuery("select playrated from students where StuID = '" + l14.getText() + "'");
            if (rs.next()) {
                countplay = rs.getString("playrated").equals("") ? 0 : Integer.parseInt(rs.getString("playrated"));
            }
            System.out.println(countplay);
        } catch (Exception e) {
            System.out.println(e);
        }

double score11 = Double.parseDouble(score.getText().equals("")? "0" :score.getText());
double score12 = Double.parseDouble(score1.getText().equals("")? "0" :score1.getText());
double score13 = Double.parseDouble(score2.getText().equals("")? "0" :score2.getText());
double score14 = Double.parseDouble(score4.getText().equals("")? "0" :score4.getText());
double score15 = Double.parseDouble(score5.getText().equals("")? "0" :score5.getText());

double pd11 = Double.parseDouble(pd.getText());
double pd12 = Double.parseDouble(pd1.getText());
double pd13 = Double.parseDouble(pd2.getText());
double pd14 = Double.parseDouble(pd4.getText());
double pd15 = Double.parseDouble(pd6.getText());

double player = Double.parseDouble(l4.getText());

double opp11 = Double.parseDouble(opratin1.getText());
double opp12 = Double.parseDouble(opratin2.getText());
double opp13 = Double.parseDouble(opratin3.getText());
double opp14 = Double.parseDouble(opratin5.getText());
double opp15 = Double.parseDouble(opratin6.getText());

double pluse0 = (score11 - (opp11==0? 0: (player>opp11 ? pd11: 1-pd11)));
double pluse1 = (score12 - (opp12==0? 0: (player>opp12 ? pd12: 1-pd12)));
double pluse2 = (score13 - (opp13==0? 0: (player>opp13 ? pd13: 1-pd13)));
double pluse3 = (score14 - (opp14==0? 0: (player>opp14 ? pd14: 1-pd14)));
double pluse4 = (score15 - (opp15==0? 0: (player>opp15 ? pd15: 1-pd15)));
pluse = pluse0 + pluse1 + pluse2 + pluse3 + pluse4;


 
      

        if (countplay <= 30) {
            k = 25;

            pd5.setText(String.valueOf((int) Math.round(k * pluse + Double.parseDouble(l4.getText()))));

        }

        if (countplay >= 30 & Integer.parseInt(l4.getText()) <= 2400) {
            k = 15;

            pd5.setText(String.valueOf((int) Math.round(k * pluse + Double.parseDouble(l4.getText()))));

        }


        if (countplay >= 30 & Integer.parseInt(l4.getText()) >= 2400) {
            k = 10;

            pd5.setText(String.valueOf((int) Math.round(k * pluse + Double.parseDouble(l4.getText()))));

        }
        try {
            t1.setValueAt(pd5.getText(), t1.getSelectedRow(), 2);


            Connection con = DB.getMyConnection();
            Statement st = con.createStatement();
            b1.setEnabled(false);

            DateFormat dateFormat = new SimpleDateFormat("yyyy/MM/dd HH:mm");
            st.executeUpdate("insert into indivdual(id,rating,date) values('" + l14.getText() + "','" + pd5.getText() + "','" + dateFormat.format(new Date()) + "')");
if(!opratin1.getText().equals("") && !opratin1.getText().equals("0")){
    ++countplay;
            st.executeUpdate("insert into playerrec values('" + l14.getText() + "','" + score.getText() + "','" + color1.getText() + "','" + opening.getText() + "')");
            }
if(!opratin2.getText().equals("") && !opratin2.getText().equals("0")){
    ++countplay;
            st.executeUpdate("insert into playerrec values('" + l14.getText() + "','" + score1.getText() + "','" + color2.getText() + "','" + opening1.getText() + "')");
}
if(!opratin3.getText().equals("") &&!opratin3.getText().equals("0")){
    ++countplay;
            st.executeUpdate("insert into playerrec values('" + l14.getText() + "','" + score2.getText() + "','" + color3.getText() + "','" + opening2.getText() + "')");
}
 if(!opratin5.getText().equals("") && !opratin5.getText().equals("0")){
     ++countplay;
            st.executeUpdate("insert into playerrec values('" + l14.getText() + "','" + score4.getText() + "','" + color4.getText() + "','" + opening3.getText() + "')");
 }
if(!opratin6.getText().equals("") && !opratin6.getText().equals("0")){
    ++countplay;
            st.executeUpdate("insert into playerrec values('" + l14.getText() + "','" + score5.getText() + "','" + color5.getText() + "','" + opening4.getText() + "')");

}

                        st.executeUpdate("update students set rating = '" + pd5.getText() + "', playrated='" + String.valueOf(countplay) + "' where stuid = '" + l14.getText() + "'");


        } catch (Exception e) {
            System.out.println(e);
        }


    }//GEN-LAST:event_b1ActionPerformed

    private void opratin1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_opratin1KeyTyped
        char c = evt.getKeyChar();
        if (!Character.isDigit(c) | opratin1.getText().length() >= 4) {
            evt.consume();
        }
    }//GEN-LAST:event_opratin1KeyTyped

    private void opratin2KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_opratin2KeyTyped
        char c = evt.getKeyChar();
        if (!Character.isDigit(c) | opratin2.getText().length() >= 4) {
            evt.consume();
        }
    }//GEN-LAST:event_opratin2KeyTyped

    private void opratin3KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_opratin3KeyTyped
        char c = evt.getKeyChar();
        if (!Character.isDigit(c) | opratin3.getText().length() >= 4) {
            evt.consume();
        }
    }//GEN-LAST:event_opratin3KeyTyped

    private void opratin5KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_opratin5KeyTyped
        char c = evt.getKeyChar();
        if (!Character.isDigit(c) | opratin5.getText().length() >= 4) {
            evt.consume();
        }
    }//GEN-LAST:event_opratin5KeyTyped

    private void opratin6KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_opratin6KeyTyped
        char c = evt.getKeyChar();
        if (!Character.isDigit(c) | opratin6.getText().length() >= 4) {
            evt.consume();
        }
    }//GEN-LAST:event_opratin6KeyTyped

    private void scoreKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_scoreKeyTyped
        this.pointvalidating(evt, score);
    }//GEN-LAST:event_scoreKeyTyped

    private void score1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_score1KeyTyped
        this.pointvalidating(evt, score1);
    }//GEN-LAST:event_score1KeyTyped

    private void score2KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_score2KeyTyped
        this.pointvalidating(evt, score2);
    }//GEN-LAST:event_score2KeyTyped

    private void score4KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_score4KeyTyped
        this.pointvalidating(evt, score4);
    }//GEN-LAST:event_score4KeyTyped

    private void score5KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_score5KeyTyped
        this.pointvalidating(evt, score5);
    }//GEN-LAST:event_score5KeyTyped

    private void scoreFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_scoreFocusLost
    }//GEN-LAST:event_scoreFocusLost

    private void score1FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_score1FocusLost
    }//GEN-LAST:event_score1FocusLost

    private void score2FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_score2FocusLost
    }//GEN-LAST:event_score2FocusLost

    private void score4FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_score4FocusLost
    }//GEN-LAST:event_score4FocusLost

    private void score5FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_score5FocusLost
    }//GEN-LAST:event_score5FocusLost

    private void color1FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_color1FocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_color1FocusLost

    private void color1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_color1KeyTyped
        String ch = String.valueOf(evt.getKeyChar());
        if ((!ch.equals("w") && !ch.equals("b")) || color1.getText().length() > 0) {
            evt.consume();
        }
    }//GEN-LAST:event_color1KeyTyped

    private void color2FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_color2FocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_color2FocusLost

    private void color2KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_color2KeyTyped
        String ch = String.valueOf(evt.getKeyChar());
        if ((!ch.equals("w") && !ch.equals("b")) || color2.getText().length() > 0) {
            evt.consume();
        }
    }//GEN-LAST:event_color2KeyTyped

    private void color3FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_color3FocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_color3FocusLost

    private void color3KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_color3KeyTyped
        String ch = String.valueOf(evt.getKeyChar());
        if ((!ch.equals("w") && !ch.equals("b")) || color3.getText().length() > 0) {
            evt.consume();
        }
    }//GEN-LAST:event_color3KeyTyped

    private void color4FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_color4FocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_color4FocusLost

    private void color4KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_color4KeyTyped
        String ch = String.valueOf(evt.getKeyChar());
        if ((!ch.equals("w") && !ch.equals("b")) || color4.getText().length() > 0) {
            evt.consume();
        }
    }//GEN-LAST:event_color4KeyTyped

    private void color5FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_color5FocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_color5FocusLost

    private void color5KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_color5KeyTyped
        String ch = String.valueOf(evt.getKeyChar());
        if ((!ch.equals("w") && !ch.equals("b")) || color5.getText().length() > 0) {
            evt.consume();
        }
    }//GEN-LAST:event_color5KeyTyped

    private void openingFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_openingFocusLost
        this.error(opening);
    }//GEN-LAST:event_openingFocusLost

    private void openingKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_openingKeyTyped


        if (opening.getText().equals("")) {
            opening.setText("0");
        }
    }//GEN-LAST:event_openingKeyTyped

    private void opening1FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_opening1FocusLost
        this.error(opening1);          // TODO add your handling code here:
    }//GEN-LAST:event_opening1FocusLost

    private void opening1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_opening1KeyTyped
        if (opening1.getText().equals("")) {
            opening1.setText("0");
        }
    }//GEN-LAST:event_opening1KeyTyped

    private void opening2FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_opening2FocusLost
        this.error(opening2);
    }//GEN-LAST:event_opening2FocusLost

    private void opening2KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_opening2KeyTyped
        if (opening2.getText().equals("")) {
            opening2.setText("0");
        }
    }//GEN-LAST:event_opening2KeyTyped

    private void opening3FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_opening3FocusLost
        this.error(opening3);
    }//GEN-LAST:event_opening3FocusLost

    private void opening3KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_opening3KeyTyped
        if (opening3.getText().equals("")) {
            opening3.setText("0");
        }
    }//GEN-LAST:event_opening3KeyTyped

    private void opening4FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_opening4FocusLost
        this.error(opening4);
    }//GEN-LAST:event_opening4FocusLost

    private void opening4KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_opening4KeyTyped
        if (opening4.getText().equals("")) {
            opening4.setText("0");
        }
    }//GEN-LAST:event_opening4KeyTyped

    private void jtopeningMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jtopeningMouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_jtopeningMouseEntered

    private void jScrollPane4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jScrollPane4MouseClicked
    }//GEN-LAST:event_jScrollPane4MouseClicked

    private void openingFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_openingFocusGained

        try {
            val = String.valueOf(jtopening.getValueAt(jtopening.getSelectedRow(), 0));
        } catch (Exception e) {
        }

        opening.setText(val);
    }//GEN-LAST:event_openingFocusGained

    private void opening1FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_opening1FocusGained
        try {
            val = String.valueOf(jtopening.getValueAt(jtopening.getSelectedRow(), 0));
        } catch (Exception e) {
        }

        opening1.setText(val);
    }//GEN-LAST:event_opening1FocusGained

    private void opening2FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_opening2FocusGained
        try {
            val = String.valueOf(jtopening.getValueAt(jtopening.getSelectedRow(), 0));
        } catch (Exception e) {
        }

        opening2.setText(val);
    }//GEN-LAST:event_opening2FocusGained

    private void opening3FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_opening3FocusGained
        try {
            val = String.valueOf(jtopening.getValueAt(jtopening.getSelectedRow(), 0));
        } catch (Exception e) {
        }

        opening3.setText(val);
    }//GEN-LAST:event_opening3FocusGained

    private void opening4FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_opening4FocusGained
        try {
            val = String.valueOf(jtopening.getValueAt(jtopening.getSelectedRow(), 0));
        } catch (Exception e) {
        }

        opening4.setText(val);
    }//GEN-LAST:event_opening4FocusGained

    private void AddnewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddnewActionPerformed
        if (!jTextField2.getText().isEmpty()) {
            String nowNo = "1";
          
        try {
            Statement st = DB.getMyConnection().createStatement();
            ResultSet rs = st.executeQuery("select max(no) as hell from openings");
            if(rs.next()){
              
            nowNo = String.valueOf(Integer.parseInt(rs.getString("hell"))+1);
            System.out.println(nowNo +"hgh");
            }
        } catch (Exception e) {
            System.out.println(e);
        }

           

            try {
                String as = jTextField2.getText();
               
                
                Connection con = DB.getMyConnection();
                Statement st = con.createStatement();
                st.executeUpdate("insert into openings values('" + nowNo + "' , '" + as.replace("'", "''") + "')");
               jTextField2.setText("");
            } catch (Exception e) {
                // if(e.equals(b1)){}
                JOptionPane.showMessageDialog(null, "The Opening you are trying to insert is alredy in the list");
               
            }
        }
      
    }//GEN-LAST:event_AddnewActionPerformed

    private void Addnew1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Addnew1ActionPerformed
Object[] options = { "Yes", "Cancel" };
            

int respon = JOptionPane.showOptionDialog(null, "All the game records will be removed for this opening are you sure you want to Proceed", "Warning",JOptionPane.DEFAULT_OPTION, JOptionPane.WARNING_MESSAGE,null, options, options[0]);
if(respon==0){

       
            val = jtopening.getValueAt(jtopening.getSelectedRow(), 0).toString();
      
        try {
            Connection con = DB.getMyConnection();
            Statement st = con.createStatement();
            st.executeUpdate("delete from openings where no ='" + val + "'");
            st.executeUpdate("delete from playerrec where opening ='" + val + "'");
        } catch (Exception e) {
            System.out.println(e);
        }
        this.openings();
}
    }//GEN-LAST:event_Addnew1ActionPerformed

    private void tsKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tsKeyReleased
      
    }//GEN-LAST:event_tsKeyReleased

    private void nameKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_nameKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_nameKeyTyped

    private void tsKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tsKeyTyped
        DefaultTableModel df1 = (DefaultTableModel) jtopening.getModel();
        df1.setRowCount(0);
        try {
            Statement st = DB.getMyConnection().createStatement();

            ResultSet rs = st.executeQuery("select* from openings where opening like'%"+ ts.getText().replace("'", "''") + "%'");


            while (rs.next()) {
                Vector v = new Vector();
                v.add(rs.getString("no"));
                v.add(rs.getString("opening"));

                df1.addRow(v);

            }

        } catch (Exception e) {
            System.out.println(e);
        }
           try {
            jtopening.setRowSelectionInterval(0, 0);
        } catch (Exception e) {
               System.out.println(e);
        }
    }//GEN-LAST:event_tsKeyTyped

    private void openingActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_openingActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_openingActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new gameDetails().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Addnew;
    private javax.swing.JButton Addnew1;
    private javax.swing.JTextField Id;
    private javax.swing.JButton b1;
    private javax.swing.JButton back;
    private javax.swing.JTextField color1;
    private javax.swing.JTextField color2;
    private javax.swing.JTextField color3;
    private javax.swing.JTextField color4;
    private javax.swing.JTextField color5;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JSeparator jSeparator4;
    private javax.swing.JSeparator jSeparator5;
    private javax.swing.JSeparator jSeparator6;
    private javax.swing.JSeparator jSeparator7;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTable jtopening;
    private javax.swing.JLabel l0;
    private javax.swing.JLabel l10;
    private javax.swing.JLabel l11;
    private javax.swing.JLabel l12;
    private javax.swing.JLabel l13;
    private javax.swing.JLabel l14;
    private javax.swing.JLabel l15;
    private javax.swing.JLabel l16;
    private javax.swing.JLabel l2;
    private javax.swing.JLabel l3;
    private javax.swing.JLabel l4;
    private javax.swing.JLabel l5;
    private javax.swing.JLabel l6;
    private javax.swing.JLabel l7;
    private javax.swing.JLabel l8;
    private javax.swing.JLabel l9;
    private javax.swing.JTextField name;
    private javax.swing.JTextField opening;
    private javax.swing.JTextField opening1;
    private javax.swing.JTextField opening2;
    private javax.swing.JTextField opening3;
    private javax.swing.JTextField opening4;
    private javax.swing.JTextField opratin1;
    private javax.swing.JTextField opratin2;
    private javax.swing.JTextField opratin3;
    private javax.swing.JTextField opratin4;
    private javax.swing.JTextField opratin5;
    private javax.swing.JTextField opratin6;
    private javax.swing.JLabel pd;
    private javax.swing.JLabel pd1;
    private javax.swing.JLabel pd2;
    private javax.swing.JLabel pd3;
    private javax.swing.JLabel pd4;
    private javax.swing.JLabel pd5;
    private javax.swing.JLabel pd6;
    private javax.swing.JTextField score;
    private javax.swing.JTextField score1;
    private javax.swing.JTextField score2;
    private javax.swing.JTextField score3;
    private javax.swing.JTextField score4;
    private javax.swing.JTextField score5;
    private javax.swing.JTable t1;
    private javax.swing.JTextField ts;
    // End of variables declaration//GEN-END:variables
}
